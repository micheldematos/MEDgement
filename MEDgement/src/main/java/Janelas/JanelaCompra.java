/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Janelas;
import Model.CompraTableModel;
import DAO.CompraDAO;
import Objetos.Compra;
import Objetos.Fornecedor;
import javax.swing.JOptionPane;
import DAO.FornecedorDAO;
import DAO.MedicamentoDAO;
import Objetos.MedComprados;
import Regex.ValidacaoRegex;
import java.awt.Cursor;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;

/**
 *
 * @author michel.matos
 */
public final class JanelaCompra extends javax.swing.JFrame {
    
    TelaInicial inicio;
    
    CompraTableModel model = new CompraTableModel();
    FornecedorDAO fornDao = new FornecedorDAO();
    List<Fornecedor> fornList = fornDao.read();
    int clique = -1;
    
    public JanelaCompra() throws ParseException {
        initComponents();
        this.setLocationRelativeTo(null);
        
        for (int i = 0; i < fornList.size(); i++) {
            if (fornList.get(i).getSituacaofornecedor() == 1) {
                fornComboBox.addItem(String.valueOf((fornList.get(i).getCodfornecedor())) + " - " + 
                    fornList.get(i).getNomefornecedor());
            } else if (fornList.get(i).getSituacaofornecedor() == 0){
                fornComboBox.addItem(String.valueOf("INATIVADO ("+ (fornList.get(i).getCodfornecedor())) + " - " + 
                    fornList.get(i).getNomefornecedor()+")");
            }
        }
        
        organizarCaixasInserir();
        formatar();
        
        botaoConsItem.setVisible(false);
        consultaItens.setVisible(false);
        
        tabelaCompra.setModel(model);
        caixaInsDataComp.setText(desconverterData(String.valueOf(LocalDate.now())));
        caixaInsDataEntComp.setText(desconverterData(String.valueOf(LocalDate.now())));
    }
    
    public JanelaCompra(TelaInicial inicio) throws ParseException {
        initComponents();
        this.setLocationRelativeTo(null);
        
        for (int i = 0; i < fornList.size(); i++) {
            if (fornList.get(i).getSituacaofornecedor() == 1) {
                fornComboBox.addItem(String.valueOf((fornList.get(i).getCodfornecedor())) + " - " + 
                    fornList.get(i).getNomefornecedor());
            } else if (fornList.get(i).getSituacaofornecedor() == 0){
                fornComboBox.addItem(String.valueOf("INATIVADO ("+ (fornList.get(i).getCodfornecedor())) + " - " + 
                    fornList.get(i).getNomefornecedor()+")");
            }
        }
        
        organizarCaixasInserir();
        formatar();
        
        botaoConsItem.setVisible(false);
        consultaItens.setVisible(false);
        
        tabelaCompra.setModel(model);
        caixaInsDataComp.setText(desconverterData(String.valueOf(LocalDate.now())));
        caixaInsDataEntComp.setText(desconverterData(String.valueOf(LocalDate.now())));
        this.inicio = inicio;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaCompra = new javax.swing.JTable();
        caixaDataCompra = new javax.swing.JLabel();
        caixaDataEntComp = new javax.swing.JLabel();
        botaoAvançarComp = new javax.swing.JButton();
        caixaNfComp = new javax.swing.JLabel();
        botaoAlterarComp = new javax.swing.JButton();
        botaoRemover = new javax.swing.JButton();
        caixaCompra = new javax.swing.JLabel();
        caixaFormPagComp = new javax.swing.JLabel();
        caixaFornCompra = new javax.swing.JLabel();
        fornComboBox = new javax.swing.JComboBox<>();
        botaoLimpar = new javax.swing.JButton();
        caixaPesquisar = new javax.swing.JLabel();
        caixaInsPesquisar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        botaoConsItem = new javax.swing.JButton();
        caixaInsDataEntComp = new javax.swing.JFormattedTextField();
        pagComboBox = new javax.swing.JComboBox<>();
        caixaInsNumNfComp = new javax.swing.JFormattedTextField();
        caixaInsDataComp = new javax.swing.JTextField();
        consultaItens = new javax.swing.JPanel();
        consultaCompra = new javax.swing.JLabel();
        consultaDataEntrega = new javax.swing.JLabel();
        consultaFormaPag = new javax.swing.JLabel();
        consultaCodfornecedor = new javax.swing.JLabel();
        consultaNomeFornecedor = new javax.swing.JLabel();
        caixaConsultaDataEntrega = new javax.swing.JLabel();
        caixaConsultaFormaPag = new javax.swing.JLabel();
        caixaConsultaCodfornecedor = new javax.swing.JLabel();
        caixaConsultaNomeFornecedor = new javax.swing.JLabel();
        caixaConsultaCod = new javax.swing.JLabel();
        consultaCod = new javax.swing.JLabel();
        botaoVoltar = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(900, 600));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        tabelaCompra.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tabelaCompra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelaCompra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaCompraMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaCompra);

        caixaDataCompra.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        caixaDataCompra.setText("Data da compra");

        caixaDataEntComp.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        caixaDataEntComp.setText("Data de entrega");

        botaoAvançarComp.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        botaoAvançarComp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/Adicionar.png"))); // NOI18N
        botaoAvançarComp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAvançarCompActionPerformed(evt);
            }
        });

        caixaNfComp.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        caixaNfComp.setText("Número NF");

        botaoAlterarComp.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        botaoAlterarComp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/Alterar.png"))); // NOI18N
        botaoAlterarComp.setMaximumSize(new java.awt.Dimension(25, 25));
        botaoAlterarComp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAlterarCompActionPerformed(evt);
            }
        });

        botaoRemover.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        botaoRemover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/Remover.png"))); // NOI18N
        botaoRemover.setMaximumSize(new java.awt.Dimension(25, 25));
        botaoRemover.setMinimumSize(new java.awt.Dimension(25, 25));
        botaoRemover.setPreferredSize(new java.awt.Dimension(25, 25));
        botaoRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoRemoverActionPerformed(evt);
            }
        });

        caixaCompra.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        caixaCompra.setText("COMPRA");
        caixaCompra.setAlignmentY(0.0F);

        caixaFormPagComp.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        caixaFormPagComp.setText("Pagamento");

        caixaFornCompra.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        caixaFornCompra.setText("Fornecedor");

        fornComboBox.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        fornComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fornComboBoxActionPerformed(evt);
            }
        });

        botaoLimpar.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        botaoLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/Limpar.png"))); // NOI18N
        botaoLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLimparActionPerformed(evt);
            }
        });

        caixaPesquisar.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        caixaPesquisar.setText("Pesquisar");

        caixaInsPesquisar.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        caixaInsPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                caixaInsPesquisarKeyReleased(evt);
            }
        });

        botaoConsItem.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        botaoConsItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/ConsultaItens.png"))); // NOI18N
        botaoConsItem.setText("Detalhar compra");
        botaoConsItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoConsItemActionPerformed(evt);
            }
        });

        caixaInsDataEntComp.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        pagComboBox.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        pagComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dinheiro", "Cartão de crédito", "Cartão de débito", "Boleto bancário", "Transferência bancária", "PIX", "Cheque" }));

        caixaInsNumNfComp.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        caixaInsDataComp.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        caixaInsDataComp.setText("jTextField1");

        consultaItens.setBackground(new java.awt.Color(255, 255, 255));
        consultaItens.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 46, 138), 4, true));
        consultaItens.setForeground(new java.awt.Color(60, 63, 65));

        consultaCompra.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        consultaCompra.setText("CONSULTA COMPRA");

        consultaDataEntrega.setBackground(new java.awt.Color(0, 0, 0));
        consultaDataEntrega.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        consultaDataEntrega.setText("Data de entrega");

        consultaFormaPag.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        consultaFormaPag.setText("Forma de pagamento");

        consultaCodfornecedor.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        consultaCodfornecedor.setText("Código fornecedor");

        consultaNomeFornecedor.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        consultaNomeFornecedor.setText("Nome fornecedor");

        caixaConsultaDataEntrega.setBackground(new java.awt.Color(0, 0, 0));
        caixaConsultaDataEntrega.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        caixaConsultaDataEntrega.setText("Data de entrega");

        caixaConsultaFormaPag.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        caixaConsultaFormaPag.setText("Forma de pagamento");

        caixaConsultaCodfornecedor.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        caixaConsultaCodfornecedor.setText("Código fornecedor");

        caixaConsultaNomeFornecedor.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        caixaConsultaNomeFornecedor.setText("Nome fornecedor");

        caixaConsultaCod.setBackground(new java.awt.Color(0, 0, 0));
        caixaConsultaCod.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        caixaConsultaCod.setText("Código compra");

        consultaCod.setBackground(new java.awt.Color(0, 0, 0));
        consultaCod.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        consultaCod.setText("Código");

        javax.swing.GroupLayout consultaItensLayout = new javax.swing.GroupLayout(consultaItens);
        consultaItens.setLayout(consultaItensLayout);
        consultaItensLayout.setHorizontalGroup(
            consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultaItensLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(consultaCompra)
                    .addGroup(consultaItensLayout.createSequentialGroup()
                        .addGroup(consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(caixaConsultaNomeFornecedor)
                            .addComponent(caixaConsultaCodfornecedor)
                            .addComponent(caixaConsultaDataEntrega)
                            .addComponent(caixaConsultaFormaPag)
                            .addComponent(caixaConsultaCod))
                        .addGap(18, 18, 18)
                        .addGroup(consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(consultaCod)
                            .addComponent(consultaNomeFornecedor)
                            .addComponent(consultaCodfornecedor)
                            .addComponent(consultaDataEntrega)
                            .addComponent(consultaFormaPag))))
                .addContainerGap())
        );
        consultaItensLayout.setVerticalGroup(
            consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultaItensLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(consultaCompra)
                .addGap(17, 17, 17)
                .addGroup(consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(caixaConsultaCod)
                    .addComponent(consultaCod))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(caixaConsultaDataEntrega)
                    .addComponent(consultaDataEntrega))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(caixaConsultaFormaPag)
                    .addComponent(consultaFormaPag))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(caixaConsultaCodfornecedor)
                    .addComponent(consultaCodfornecedor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(caixaConsultaNomeFornecedor)
                    .addComponent(consultaNomeFornecedor))
                .addGap(53, 53, 53))
        );

        botaoVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/Voltar.png"))); // NOI18N
        botaoVoltar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botaoVoltarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botaoVoltarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botaoVoltarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 841, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(caixaPesquisar)
                        .addGap(18, 18, 18)
                        .addComponent(caixaInsPesquisar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botaoVoltar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(caixaCompra)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(caixaDataEntComp)
                                    .addComponent(caixaDataCompra)
                                    .addComponent(caixaFornCompra)
                                    .addComponent(caixaNfComp)
                                    .addComponent(caixaFormPagComp))
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(caixaInsDataEntComp, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(caixaInsNumNfComp, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(fornComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pagComboBox, 0, 212, Short.MAX_VALUE)
                                    .addComponent(caixaInsDataComp)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botaoAvançarComp, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaoLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaoAlterarComp, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaoRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaoConsItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(54, 54, 54)
                        .addComponent(consultaItens, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(391, 391, 391))
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(caixaCompra, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(botaoVoltar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(caixaDataCompra)
                            .addComponent(caixaInsDataComp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(caixaDataEntComp)
                            .addComponent(caixaInsDataEntComp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(caixaNfComp)
                            .addComponent(caixaInsNumNfComp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fornComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(caixaFornCompra))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(caixaFormPagComp)
                            .addComponent(pagComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(botaoAvançarComp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botaoRemover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botaoAlterarComp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botaoLimpar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botaoConsItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(consultaItens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(caixaPesquisar)
                    .addComponent(caixaInsPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoAvançarCompActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAvançarCompActionPerformed
        // TODO add your handling code here:
        
        
        
        if (fornComboBox.getSelectedIndex() != -1 && fornList.get(fornComboBox.getSelectedIndex()).getSituacaofornecedor() != 0) {
            Compra comp = new Compra();
        
            try {
                comp.setDataCompra(converterData(caixaInsDataComp.getText()));
                comp.setDataEntregaCompra(converterData(caixaInsDataEntComp.getText()));
                comp.setNumeroNFCompra(Integer.parseInt(caixaInsNumNfComp.getText().trim( )));
                comp.setFormaPagamentoCompra(String.valueOf(pagComboBox.getSelectedItem()));
                comp.setCodFornecedor(fornList.get(fornComboBox.getSelectedIndex()).getCodfornecedor());

                JanelaMedComprados addItens = new JanelaMedComprados(comp, "Avançar");
                addItens.setVisible(true);
                ocultar();

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Falha em cadastrar compra(608697097): " + e);
            }
        } else if (fornList.get(fornComboBox.getSelectedIndex()).getSituacaofornecedor() == 0) {
            JOptionPane.showMessageDialog(null, "Ative o cadastro de fornecedor em sua tela de cadastro",
                    "FORNECEDOR DESATIVADO!", NORMAL);
        }
    }//GEN-LAST:event_botaoAvançarCompActionPerformed

    private void fornComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fornComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fornComboBoxActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        model.recarregaTabela();
        caixaInsNumNfComp.requestFocus();
    }//GEN-LAST:event_formWindowActivated

    private void botaoAlterarCompActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAlterarCompActionPerformed
        // TODO add your handling code here:
        if (tabelaCompra.getSelectedRow() != -1 && fornList.get(fornComboBox.getSelectedIndex()).getSituacaofornecedor() != 0) {
            
            int alterarComp = JOptionPane.showConfirmDialog(null, "Alterar compra?","CONFIRMAR",JOptionPane.YES_NO_OPTION);
            
            if (alterarComp == 0) {
                model.setValueAt(converterData(caixaInsDataComp.getText()), tabelaCompra.getSelectedRow(), 1);
                model.setValueAt(converterData(caixaInsDataEntComp.getText()), tabelaCompra.getSelectedRow(), 2);
                model.setValueAt(caixaInsNumNfComp.getText().trim( ), tabelaCompra.getSelectedRow(), 3);
                model.setValueAt(String.valueOf(pagComboBox.getSelectedItem()), tabelaCompra.getSelectedRow(), 5);
                model.setValueAt(String.valueOf(fornList.get(fornComboBox.getSelectedIndex()).getCodfornecedor()), tabelaCompra.getSelectedRow(), 6);

                Compra comp = model.pegaDadosLinha(tabelaCompra.getSelectedRow());
                CompraDAO dao = new CompraDAO();

                dao.atualizar(comp);
                ocultar();
            } else if (alterarComp == 1) {
                ocultar();
            }            
        } else if (fornList.get(fornComboBox.getSelectedIndex()).getSituacaofornecedor() == 0) {
            JOptionPane.showMessageDialog(null, "Ative o cadastro de fornecedor em sua tela de cadastro",
                    "FORNECEDOR DESATIVADO!", NORMAL);
        }
    }//GEN-LAST:event_botaoAlterarCompActionPerformed

    private void tabelaCompraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaCompraMouseClicked
        // TODO add your handling code here:
                       
        if (tabelaCompra.getSelectedRow() != -1 && tabelaCompra.getSelectedRow() != clique) {
            clique = tabelaCompra.getSelectedRow();
            botaoConsItem.setVisible(true);
            
            fornDao = new FornecedorDAO();
            
            Compra comp = model.pegaDadosLinha(tabelaCompra.getSelectedRow());
            String nomeForn = fornDao.pesquisarCod(String.valueOf(comp.getCodFornecedor())).get(0).getNomefornecedor();
            
            consultaCompra(comp.getCodCompra(), desconverterData(comp.getDataEntregaCompra()),
                    comp.getFormaPagamentoCompra(), comp.getCodFornecedor(), nomeForn);
            
            

            caixaInsDataComp.setText(desconverterData(comp.getDataCompra()));
            caixaInsDataEntComp.setText(desconverterData(comp.getDataEntregaCompra()));
            caixaInsNumNfComp.setText(String.valueOf(comp.getNumeroNFCompra()));
            pagComboBox.setSelectedItem(comp.getFormaPagamentoCompra());

            for (int i = 0; i < fornList.size(); i++) {
                if ((fornList.get(i).getCodfornecedor()) == comp.getCodFornecedor()) {
                    fornComboBox.setSelectedIndex(i);
                }
            }
                        
        } else {
            ocultar();
        }
    }//GEN-LAST:event_tabelaCompraMouseClicked

    public void ocultar(){
        clique = -1;
        tabelaCompra.clearSelection();
        consultaItens.setVisible(false);
        botaoConsItem.setVisible(false);
    }
    
    public void consultaCompra(int codCompra, String dataEntrega, String formaPag, int codForn, String nomeForn ){
        consultaItens.setVisible(true);
        consultaCod.setText(String.valueOf(codCompra));
        consultaDataEntrega.setText(dataEntrega);
        consultaFormaPag.setText(formaPag);
        consultaCodfornecedor.setText(String.valueOf(codForn));
        consultaNomeFornecedor.setText(nomeForn);
    }
        
    // MÉTODO VALIDADO
    private void botaoRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoRemoverActionPerformed
        // TODO add your handling code here:
        if (tabelaCompra.getSelectedRow() != -1) {
            int removerCompra = JOptionPane.showConfirmDialog(null, "Remover compra?","CONFIRMAR",JOptionPane.YES_NO_OPTION);
            if (removerCompra == 0) {
                CompraDAO compDao = new CompraDAO();
            
                boolean cadastro = validarEstoqueDelCompra();

                if (cadastro) {
                    Compra comp = model.pegaDadosLinha(tabelaCompra.getSelectedRow());
                    compDao.deletar(comp);
                    ocultar();
                } else {
                    JOptionPane.showMessageDialog(null, "Existem medicamentos com a quantidade menor do que o estoque!");
                    ocultar();
                }
            } else if (removerCompra == 1) {
                ocultar();
            }
        }
    }//GEN-LAST:event_botaoRemoverActionPerformed

    private void botaoLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLimparActionPerformed
        // TODO add your handling code here:
        int limparCampos = JOptionPane.showConfirmDialog(null, "Limpar campos?","CONFIRMAR",JOptionPane.YES_NO_OPTION);
        if (limparCampos == 0) {
            limpacampos();
            ocultar();
        } else if(limparCampos == 1){
            ocultar();
        }
    }//GEN-LAST:event_botaoLimparActionPerformed

  
    public boolean validarEstoqueDelCompra(){
        CompraDAO compDao = new CompraDAO();
        MedicamentoDAO medDao = new MedicamentoDAO();
            
        Compra comp = model.pegaDadosLinha(tabelaCompra.getSelectedRow());
        List<MedComprados> medComp = compDao.pesqItens(String.valueOf(comp.getCodCompra()));
            
        boolean cadastro = true;
            
        for (int i = 0; i < medComp.size(); i++) {
            
            int estMed = medDao.pesquisarCod(String.valueOf(medComp.get(i).getCodmedicamento())).get(0).getQuantidadeestoque();
            int qntMedComp = medComp.get(i).getQuantidademed();
            
            if (qntMedComp > estMed) {
                cadastro = false;
            }
        }
        return cadastro;
    }    
    
    private void caixaInsPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_caixaInsPesquisarKeyReleased
        // TODO add your handling code here:
        if (!"".equals(caixaInsPesquisar.getText())) {
            model.recarregaTabelaPesq(caixaInsPesquisar.getText());
        } else {
            model.recarregaTabela();
        }
    }//GEN-LAST:event_caixaInsPesquisarKeyReleased

    private void botaoConsItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoConsItemActionPerformed
        // TODO add your handling code here:
        if (tabelaCompra.getSelectedRow() != -1) {
            Compra comp = new Compra();
            Compra compM = model.pegaDadosLinha(tabelaCompra.getSelectedRow());

            comp.setCodCompra(compM.getCodCompra());
            comp.setDataCompra(compM.getDataCompra());
            comp.setDataEntregaCompra(compM.getDataEntregaCompra());
            comp.setNumeroNFCompra(compM.getNumeroNFCompra());
            comp.setValorNFCompra(compM.getValorNFCompra());
            comp.setFormaPagamentoCompra(compM.getFormaPagamentoCompra());
            comp.setCodFornecedor(compM.getCodFornecedor());
            
            ocultar();

            JanelaMedComprados addItens = new JanelaMedComprados(comp, null);
            addItens.setVisible(true);
        }
    }//GEN-LAST:event_botaoConsItemActionPerformed

    private void botaoVoltarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoVoltarMouseEntered
        // TODO add your handling code here:
        this.setCursor(Cursor.HAND_CURSOR);
    }//GEN-LAST:event_botaoVoltarMouseEntered

    private void botaoVoltarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoVoltarMouseExited
        // TODO add your handling code here:
        this.setCursor(Cursor.DEFAULT_CURSOR);
    }//GEN-LAST:event_botaoVoltarMouseExited

    private void botaoVoltarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoVoltarMouseClicked
        // TODO add your handling code here:
        inicio.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_botaoVoltarMouseClicked

    
//    public class JTextFieldArialBold8 extends JTextField {
//
//    public JTextFieldArialBold8() {
//    super();
//    this.setFont( new Font( “arial”, Font.BOLD, 8 ) );
//    }
//
//    }
    
    public void formatar(){
        JTableHeader tituloTabela = tabelaCompra.getTableHeader();
        tituloTabela.setFont(new Font("century gothic", Font.BOLD, 12));
        
        DefaultTableCellRenderer centralizar = (DefaultTableCellRenderer)
        tituloTabela.getDefaultRenderer();
        centralizar.setHorizontalAlignment(JLabel.CENTER);
        
        UIManager.put("OptionPane.cancelButtonText", "Cancelar"); 
        UIManager.put("OptionPane.noButtonText", "Não"); 
        UIManager.put("OptionPane.yesButtonText", "Sim");
    }
    
    public void organizarCaixasInserir() throws ParseException{
        
//        caixaInsDataComp.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory
//        (new javax.swing.text.MaskFormatter("##/##/####")));

        caixaInsDataEntComp.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory
        (new javax.swing.text.MaskFormatter("##/##/####")));
        
        caixaInsNumNfComp.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory
        (new javax.swing.text.MaskFormatter("#########")));
    }
    
    public String converterData(String dataDigitada){
            String dataConvertida = null;
        try {
            SimpleDateFormat in = new SimpleDateFormat("dd/MM/yyyy");
            Date data = in.parse(dataDigitada);
            dataConvertida = String.valueOf(new java.sql.Date(data.getTime()));
        } catch (java.text.ParseException ex) {
            Logger.getLogger(JanelaDrogaria.class.getName()).log(Level.SEVERE, null, ex);
        }
        return dataConvertida;
    }
    
    public String desconverterData(String dataDigitada){
        String dataFormatada = null;
        
        SimpleDateFormat formatoBanco = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat formatoDesejado = new SimpleDateFormat("dd/MM/yyyy");
        
        try {
            Date dataBanco = new Date(formatoBanco.parse(dataDigitada).getTime());
            dataFormatada = formatoDesejado.format(dataBanco);
        } catch (ParseException e) {
        }
        return dataFormatada;
    }
    
    public void validarDadosCampos(){
        ValidacaoRegex valReg = new ValidacaoRegex();
        System.out.println(valReg.validarData("02/03/2001"));
        
        
        
//        if (valReg.validarData(caixaInsDataComp.getText())) {
//            System.out.println("");
//        }
        
//        if (!(valReg.validarData(caixaInsDataEntComp.getText()))) {
//            validarCampos = false;
//            System.out.println("Data entrega inválida");
//        }
//        
//        if (!(valReg.validarNumNf(caixaInsNumNfComp.getText().trim( )))) {
//            validarCampos = false;
//            System.out.println("NF inválida");
//        }
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new JanelaCompra().setVisible(true);
                } catch (ParseException ex) {
                    Logger.getLogger(JanelaCompra.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    public void limpacampos(){
        caixaInsDataComp.setText("");
        caixaInsDataEntComp.setText("");
        caixaInsNumNfComp.setText("");
        caixaInsNumNfComp.requestFocus();
        
        tabelaCompra.clearSelection();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoAlterarComp;
    private javax.swing.JButton botaoAvançarComp;
    private javax.swing.JButton botaoConsItem;
    private javax.swing.JButton botaoLimpar;
    private javax.swing.JButton botaoRemover;
    private javax.swing.JLabel botaoVoltar;
    private javax.swing.JLabel caixaCompra;
    private javax.swing.JLabel caixaConsultaCod;
    private javax.swing.JLabel caixaConsultaCodfornecedor;
    private javax.swing.JLabel caixaConsultaDataEntrega;
    private javax.swing.JLabel caixaConsultaFormaPag;
    private javax.swing.JLabel caixaConsultaNomeFornecedor;
    private javax.swing.JLabel caixaDataCompra;
    private javax.swing.JLabel caixaDataEntComp;
    private javax.swing.JLabel caixaFormPagComp;
    private javax.swing.JLabel caixaFornCompra;
    private javax.swing.JTextField caixaInsDataComp;
    private javax.swing.JFormattedTextField caixaInsDataEntComp;
    private javax.swing.JFormattedTextField caixaInsNumNfComp;
    private javax.swing.JTextField caixaInsPesquisar;
    private javax.swing.JLabel caixaNfComp;
    private javax.swing.JLabel caixaPesquisar;
    private javax.swing.JLabel consultaCod;
    private javax.swing.JLabel consultaCodfornecedor;
    private javax.swing.JLabel consultaCompra;
    private javax.swing.JLabel consultaDataEntrega;
    private javax.swing.JLabel consultaFormaPag;
    private javax.swing.JPanel consultaItens;
    private javax.swing.JLabel consultaNomeFornecedor;
    private javax.swing.JComboBox<String> fornComboBox;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JComboBox<String> pagComboBox;
    private javax.swing.JTable tabelaCompra;
    // End of variables declaration//GEN-END:variables
}
