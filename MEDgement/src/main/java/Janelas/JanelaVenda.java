/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Janelas;

import DAO.DrogariaDAO;
import DAO.NotaFiscalDAO;
import DAO.VendaDAO;
import Model.VendTableModel;
import Objetos.Drogaria;
import Objetos.NotaFiscal;
import Objetos.Venda;
import java.awt.Cursor;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;

/**
 *
 * @author michel.matos
 */
public final class JanelaVenda extends javax.swing.JFrame {
    
    TelaInicial inicio;
    int clique = -1;
    
    VendTableModel model = new VendTableModel();
    DrogariaDAO drogDao = new DrogariaDAO();
    List<Drogaria> drogList = drogDao.read();

    /**
     * Creates new form JanelaVenda
     * @throws java.text.ParseException 
     */
    public JanelaVenda() throws ParseException {
        initComponents();
        this.setLocationRelativeTo(null);
        
//        for (int i = 0; i < drogList.size(); i++) {
//            DrogComboBox.addItem(String.valueOf((drogList.get(i).getCoddrogaria())) + " - " + 
//                    drogList.get(i).getNomedrogaria());
//        }
//        
        for (int i = 0; i < drogList.size(); i++) {
            if (drogList.get(i).getSituacaodrogaria() == 1) {
                DrogComboBox.addItem(String.valueOf((drogList.get(i).getCoddrogaria())) + " - " + 
                    drogList.get(i).getNomedrogaria());
            } else{
                DrogComboBox.addItem(String.valueOf("INATIVADO (" + (drogList.get(i).getCoddrogaria())) + " - " + 
                    drogList.get(i).getNomedrogaria()+ ")");
            }
        }
        
        tabelaVenda.setModel(model);
        caixaInsDataVend.setText(desconverterData(String.valueOf(LocalDate.now())));
        botaoEmitirNf.setVisible(false);
        botaoCancelarNf.setVisible(false);
        consultaItens.setVisible(false);
        botaoConsItens.setVisible(false);
        
        formatar();
        ocultar();
    }
    
    public JanelaVenda(TelaInicial inicio) throws ParseException {
        initComponents();
        this.setLocationRelativeTo(null);
        
        for (int i = 0; i < drogList.size(); i++) {
            if (drogList.get(i).getSituacaodrogaria() == 1) {
                DrogComboBox.addItem(String.valueOf((drogList.get(i).getCoddrogaria())) + " - " + 
                    drogList.get(i).getNomedrogaria());
            } else{
                DrogComboBox.addItem(String.valueOf("INATIVADO (" + (drogList.get(i).getCoddrogaria())) + " - " + 
                    drogList.get(i).getNomedrogaria()+ ")");
            }
        }
        
        tabelaVenda.setModel(model);
        caixaInsDataVend.setText(desconverterData(String.valueOf(LocalDate.now())));
        
        
        formatar();
        ocultar();
        
        this.inicio = inicio;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        caixaFormPagVend = new javax.swing.JLabel();
        botaoCadastrarVend = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaVenda = new javax.swing.JTable();
        botaoAlterarVend = new javax.swing.JButton();
        botaorRemover = new javax.swing.JButton();
        caixaDataVenda = new javax.swing.JLabel();
        caixaVenda = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        DrogComboBox = new javax.swing.JComboBox<>();
        botaoLimpar = new javax.swing.JButton();
        caixaPesquisar = new javax.swing.JLabel();
        caixaInsPesquisar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        botaoConsItens = new javax.swing.JButton();
        pagComboBox = new javax.swing.JComboBox<>();
        caixaInsDataVend = new javax.swing.JLabel();
        botaoVoltar = new javax.swing.JLabel();
        consultaItens = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        caixaConsultaFormPag = new javax.swing.JLabel();
        caixaConsultaDrog = new javax.swing.JLabel();
        caixaConsultaNomeDrog = new javax.swing.JLabel();
        caixaConsultaNf = new javax.swing.JLabel();
        botaoCancelarNf = new javax.swing.JButton();
        botaoEmitirNf = new javax.swing.JButton();
        consultaFormPag = new javax.swing.JLabel();
        consultaCodDrog = new javax.swing.JLabel();
        consultaNomeDrog = new javax.swing.JLabel();
        consultaNf = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(900, 600));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        caixaFormPagVend.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        caixaFormPagVend.setText("Forma de pagamento");

        botaoCadastrarVend.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        botaoCadastrarVend.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/Adicionar.png"))); // NOI18N
        botaoCadastrarVend.setMaximumSize(new java.awt.Dimension(35, 35));
        botaoCadastrarVend.setMinimumSize(new java.awt.Dimension(35, 35));
        botaoCadastrarVend.setPreferredSize(new java.awt.Dimension(35, 35));
        botaoCadastrarVend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCadastrarVendActionPerformed(evt);
            }
        });

        tabelaVenda.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tabelaVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelaVenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaVendaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaVenda);

        botaoAlterarVend.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        botaoAlterarVend.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/Alterar.png"))); // NOI18N
        botaoAlterarVend.setMaximumSize(new java.awt.Dimension(35, 35));
        botaoAlterarVend.setMinimumSize(new java.awt.Dimension(35, 35));
        botaoAlterarVend.setPreferredSize(new java.awt.Dimension(35, 35));
        botaoAlterarVend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAlterarVendActionPerformed(evt);
            }
        });

        botaorRemover.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        botaorRemover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/Remover.png"))); // NOI18N
        botaorRemover.setMaximumSize(new java.awt.Dimension(35, 35));
        botaorRemover.setMinimumSize(new java.awt.Dimension(35, 35));
        botaorRemover.setPreferredSize(new java.awt.Dimension(35, 35));
        botaorRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaorRemoverActionPerformed(evt);
            }
        });

        caixaDataVenda.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        caixaDataVenda.setText("Data da venda");

        caixaVenda.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        caixaVenda.setText("VENDA");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel2.setText("Drogaria");

        DrogComboBox.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        DrogComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DrogComboBoxActionPerformed(evt);
            }
        });

        botaoLimpar.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        botaoLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/Limpar.png"))); // NOI18N
        botaoLimpar.setMaximumSize(new java.awt.Dimension(35, 35));
        botaoLimpar.setMinimumSize(new java.awt.Dimension(35, 35));
        botaoLimpar.setPreferredSize(new java.awt.Dimension(35, 35));
        botaoLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLimparActionPerformed(evt);
            }
        });

        caixaPesquisar.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        caixaPesquisar.setText("Pesquisar");

        caixaInsPesquisar.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        caixaInsPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                caixaInsPesquisarKeyReleased(evt);
            }
        });

        botaoConsItens.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        botaoConsItens.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/ConsultaItens.png"))); // NOI18N
        botaoConsItens.setText("Detalhes venda");
        botaoConsItens.setMaximumSize(new java.awt.Dimension(35, 35));
        botaoConsItens.setMinimumSize(new java.awt.Dimension(35, 35));
        botaoConsItens.setPreferredSize(new java.awt.Dimension(35, 35));
        botaoConsItens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoConsItensActionPerformed(evt);
            }
        });

        pagComboBox.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        pagComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dinheiro", "Cartão de crédito", "Cartão de débito", "Boleto bancário", "Transferência bancária", "PIX", "Cheque" }));

        caixaInsDataVend.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        caixaInsDataVend.setText("jLabel1");

        botaoVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/Voltar.png"))); // NOI18N
        botaoVoltar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botaoVoltarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botaoVoltarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botaoVoltarMouseExited(evt);
            }
        });

        consultaItens.setBackground(new java.awt.Color(255, 255, 255));
        consultaItens.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 48, 136), 4, true));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel1.setText("CONSULTA VENDA");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        caixaConsultaFormPag.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        caixaConsultaFormPag.setText("Forma de pagamento");

        caixaConsultaDrog.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        caixaConsultaDrog.setText("Código drogaria");

        caixaConsultaNomeDrog.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        caixaConsultaNomeDrog.setText("Nome drogaria");

        caixaConsultaNf.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        caixaConsultaNf.setText("Nota fiscal");

        botaoCancelarNf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/CancelarNF.png"))); // NOI18N
        botaoCancelarNf.setAlignmentY(0.0F);
        botaoCancelarNf.setMaximumSize(new java.awt.Dimension(35, 35));
        botaoCancelarNf.setMinimumSize(new java.awt.Dimension(35, 35));
        botaoCancelarNf.setPreferredSize(new java.awt.Dimension(35, 35));
        botaoCancelarNf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarNfActionPerformed(evt);
            }
        });

        botaoEmitirNf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/EmitirNf.png"))); // NOI18N
        botaoEmitirNf.setMaximumSize(new java.awt.Dimension(35, 35));
        botaoEmitirNf.setMinimumSize(new java.awt.Dimension(35, 35));
        botaoEmitirNf.setPreferredSize(new java.awt.Dimension(35, 35));
        botaoEmitirNf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEmitirNfActionPerformed(evt);
            }
        });

        consultaFormPag.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        consultaFormPag.setText("Forma de pagamento");

        consultaCodDrog.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        consultaCodDrog.setText("Código drogaria");

        consultaNomeDrog.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        consultaNomeDrog.setText("Nome drogaria");

        consultaNf.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        consultaNf.setText("Nota fiscal");

        javax.swing.GroupLayout consultaItensLayout = new javax.swing.GroupLayout(consultaItens);
        consultaItens.setLayout(consultaItensLayout);
        consultaItensLayout.setHorizontalGroup(
            consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultaItensLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(consultaItensLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botaoEmitirNf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoCancelarNf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(consultaItensLayout.createSequentialGroup()
                        .addGroup(consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(caixaConsultaFormPag)
                            .addComponent(caixaConsultaNf)
                            .addComponent(caixaConsultaNomeDrog)
                            .addComponent(caixaConsultaDrog))
                        .addGap(18, 18, 18)
                        .addGroup(consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(consultaFormPag)
                            .addComponent(consultaNf)
                            .addComponent(consultaNomeDrog)
                            .addComponent(consultaCodDrog))))
                .addGap(153, 153, 153))
        );
        consultaItensLayout.setVerticalGroup(
            consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultaItensLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(botaoEmitirNf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoCancelarNf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(consultaItensLayout.createSequentialGroup()
                        .addComponent(caixaConsultaFormPag, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(caixaConsultaDrog)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(caixaConsultaNomeDrog)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(caixaConsultaNf))
                    .addGroup(consultaItensLayout.createSequentialGroup()
                        .addComponent(consultaFormPag, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(consultaCodDrog)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(consultaNomeDrog)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(consultaNf)))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(caixaPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(caixaInsPesquisar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(DrogComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(caixaFormPagVend)
                                        .addComponent(caixaDataVenda)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(botaoVoltar)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(caixaVenda)))
                                    .addGap(9, 9, 9)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(caixaInsDataVend, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(pagComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botaoCadastrarVend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaoAlterarVend, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaorRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaoLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaoConsItens, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(consultaItens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38)
                .addComponent(jLabel3)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(consultaItens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(caixaVenda)
                                    .addComponent(botaoVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(caixaInsDataVend)
                                    .addComponent(caixaDataVenda))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(caixaFormPagVend)
                                    .addComponent(pagComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(DrogComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(63, 63, 63)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(botaoAlterarVend, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(botaoCadastrarVend, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(botaorRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(botaoLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(botaoConsItens, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(caixaInsPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(caixaPesquisar))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoCadastrarVendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCadastrarVendActionPerformed
        // TODO add your handling code here:
        if (DrogComboBox.getSelectedIndex() != -1 && drogList.get(DrogComboBox.getSelectedIndex()).getSituacaodrogaria() != 0) {
            Venda v = new Venda();
            VendaDAO dao = new VendaDAO();

            try {
                v.setDatavenda(converterData(caixaInsDataVend.getText()));
                v.setFormapagamentovenda(String.valueOf(pagComboBox.getSelectedItem()));
                v.setCoddrogaria(drogList.get(DrogComboBox.getSelectedIndex()).getCoddrogaria());

                JanelaMedVendidos addItens = new JanelaMedVendidos(v, "Avançar");
                addItens.setVisible(true);
                tabelaVenda.clearSelection();
                clique = -1;
                ocultar();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Falha em adicionar itens (1234556): " + e);
            }
        } else if (drogList.get(DrogComboBox.getSelectedIndex()).getSituacaodrogaria() == 0){
            JOptionPane.showMessageDialog(null, "Ative o cadastro da drogaria em sua tela de cadastro",
                    "DROGARIA DESATIVADA!", NORMAL);
            tabelaVenda.clearSelection();
            clique = -1;
            ocultar();
        }
    }//GEN-LAST:event_botaoCadastrarVendActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        model.recarregaTabela();
    }//GEN-LAST:event_formWindowActivated

    private void botaoAlterarVendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAlterarVendActionPerformed
        // TODO add your handling code here:
        if (tabelaVenda.getSelectedRow() != -1 && drogList.get(DrogComboBox.getSelectedIndex()).getSituacaodrogaria() != 0) {
            
            int alterar = JOptionPane.showConfirmDialog(null, "Alterar dados da venda?", "ALTERAÇÃO", JOptionPane.YES_NO_OPTION);
                        
            if (alterar == 0) {
                Venda v = model.pegaDadosLinha(tabelaVenda.getSelectedRow());
                VendaDAO vendDao = new VendaDAO();
                
                if (v.getEmissaoNf() == 0) {
                model.setValueAt(converterData(caixaInsDataVend.getText()), tabelaVenda.getSelectedRow(), 1);
                model.setValueAt(String.valueOf(pagComboBox.getSelectedItem()), tabelaVenda.getSelectedRow(), 2);
                model.setValueAt(String.valueOf(drogList.get(DrogComboBox.getSelectedIndex()).getCoddrogaria()), tabelaVenda.getSelectedRow(), 4);

                vendDao.atualizar(v);
                model.recarregaTabela();
                tabelaVenda.clearSelection();
                clique = -1;
                ocultar();
//
//                
//                Venda v = model.pegaDadosLinha(tabelaVenda.getSelectedRow());
//                VendaDAO dao = new VendaDAO();
//                
//                dao.atualizar(v);
//                limpacampos();
//            
                } else{
                    JOptionPane.showMessageDialog(null, "Não é possível alterar o pedido!", "PEDIDO COM NOTA FISCAL", NORMAL);
                    tabelaVenda.clearSelection();
                    clique = -1;
                    ocultar();
                } 
            }
        } else if (drogList.get(DrogComboBox.getSelectedIndex()).getSituacaodrogaria() == 0){
            JOptionPane.showMessageDialog(null, "Ative o cadastro da drogaria em sua tela de cadastro",
                    "DROGARIA DESATIVADA!", NORMAL);
            tabelaVenda.clearSelection();
            clique = -1;
            ocultar();
        }
    }//GEN-LAST:event_botaoAlterarVendActionPerformed

    private void tabelaVendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaVendaMouseClicked
        // TODO add your handling code here:
        
        if (tabelaVenda.getSelectedRow() != -1 && tabelaVenda.getSelectedRow() != clique) {
            clique = tabelaVenda.getSelectedRow();
            botaoConsItens.setVisible(true);
            
            DrogariaDAO drogDao = new DrogariaDAO();
            Venda v = model.pegaDadosLinha(tabelaVenda.getSelectedRow());

            consultaItens.setVisible(true);

            caixaInsDataVend.setText(desconverterData(v.getDatavenda()));
            pagComboBox.setSelectedItem(v.getFormapagamentovenda());

            for (int i = 0; i < drogList.size(); i++) {
                if (drogList.get(i).getCoddrogaria() == v.getCoddrogaria()) {
                    DrogComboBox.setSelectedIndex(i);
                }
            }

            if (tabelaVenda.getSelectedRow() != -1 && (model.getValueAt(tabelaVenda.getSelectedRow(), 5)).equals("Sem emissão")) {
                botaoEmitirNf.setVisible(true);
            } else {
                botaoEmitirNf.setVisible(false);
            }

            if (tabelaVenda.getSelectedRow() != -1 && !(model.getValueAt(tabelaVenda.getSelectedRow(), 5)).equals("Sem emissão")) {
                botaoCancelarNf.setVisible(true);
            } else {
                botaoCancelarNf.setVisible(false);
            }

            consultaVenda(v.getFormapagamentovenda(), v.getCoddrogaria(), 
                    drogDao.pesquisarCod(String.valueOf(v.getCoddrogaria())).get(0).getNomedrogaria(), 
                    v.getEmissaoNf());
        } else {
            clique = -1;
            tabelaVenda.clearSelection();
            consultaItens.setVisible(false);
            botaoConsItens.setVisible(false);
        }
        
        
        
        
    }//GEN-LAST:event_tabelaVendaMouseClicked

    public void consultaVenda(String formPag, int codDrog, String nomeDrog, int nf){
        consultaFormPag.setText(formPag);
        consultaCodDrog.setText(String.valueOf(codDrog));
        consultaNomeDrog.setText(nomeDrog);
        
        if (nf == 0) {
            consultaNf.setText("Sem emissão");
        } else {
            consultaNf.setText(String.valueOf(nf));
        }
    }
    
    private void botaorRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaorRemoverActionPerformed
        // TODO add your handling code here:
        if (tabelaVenda.getSelectedRow() != -1) {
            
            int deletar = JOptionPane.showConfirmDialog(null, "Remover pedido de venda?", "REMOVER", JOptionPane.YES_NO_OPTION);
            
            if (deletar == 0) {
                Venda v = model.pegaDadosLinha(tabelaVenda.getSelectedRow());
                VendaDAO dao = new VendaDAO();

                if (v.getEmissaoNf() == 0) {
                    dao.deletar(v);
                    model.recarregaTabela();
                    tabelaVenda.clearSelection();
                    clique = -1;
                    ocultar();
                } else{
                    JOptionPane.showMessageDialog(null, "Não é possível apagar o pedido!", "EMITIDO NOTA FISCAL",0);
                    tabelaVenda.clearSelection();
                    clique = -1;
                    ocultar();
                }
            }
        }
    }//GEN-LAST:event_botaorRemoverActionPerformed

    private void botaoLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLimparActionPerformed
        // TODO add your handling code here:
        int limpar = JOptionPane.showConfirmDialog(null, "Limpar campos?", "LIMPAR", JOptionPane.YES_NO_OPTION);
        
        if (limpar == 0) {
            limpacampos();
        }
        
    }//GEN-LAST:event_botaoLimparActionPerformed

    private void caixaInsPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_caixaInsPesquisarKeyReleased
        // TODO add your handling code here:
        if (!"".equals(caixaInsPesquisar.getText())) {
            model.recarregaTabelaPesq(caixaInsPesquisar.getText());
        } else {
            model.recarregaTabela();
        }
    }//GEN-LAST:event_caixaInsPesquisarKeyReleased

    private void botaoConsItensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoConsItensActionPerformed
        // TODO add your handling code here:
        if (tabelaVenda.getSelectedRow() != -1) {
            Venda vend = new Venda();
            Venda vendM = model.pegaDadosLinha(tabelaVenda.getSelectedRow());
            
            vend.setCodpedido(vendM.getCodpedido());
            vend.setDatavenda(vendM.getDatavenda());
            vend.setFormapagamentovenda(vendM.getFormapagamentovenda());
            vend.setValorpedidovenda(vendM.getValorpedidovenda());
            vend.setCoddrogaria(vendM.getCoddrogaria());
            
            JanelaMedVendidos addItens = new JanelaMedVendidos(vend, botaoConsItens.getText());
            addItens.setVisible(true);
            
            clique = -1;
            tabelaVenda.clearSelection();
            ocultar();
        }
    }//GEN-LAST:event_botaoConsItensActionPerformed

    private void botaoEmitirNfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEmitirNfActionPerformed
        // TODO add your handling code here:

       
        if (tabelaVenda.getSelectedRow() != -1 && (model.getValueAt(tabelaVenda.getSelectedRow(), 5)).equals("Sem emissão" ) &&
                drogList.get(DrogComboBox.getSelectedIndex()).getSituacaodrogaria() != 0){
            
            int emitirNF = JOptionPane.showConfirmDialog(null, "Emitir nota fiscal?", "EMITIR NF", JOptionPane.YES_NO_OPTION);
            
            if (emitirNF == 0) {
                NotaFiscal nf = new NotaFiscal();
                NotaFiscalDAO nfdao = new NotaFiscalDAO();

                try {
                nf.setDataemissaonf(converterData(caixaInsDataVend.getText())); 
                nf.setValornfvenda(Double.parseDouble(String.valueOf(model.getValueAt(tabelaVenda.getSelectedRow(), 3)))); 
                nf.setCodpedido(Integer.parseInt(String.valueOf(model.getValueAt(tabelaVenda.getSelectedRow(), 0))));

                nfdao.criar(nf);
                model.recarregaTabela();
                tabelaVenda.clearSelection();
                clique = -1;
                ocultar();

                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, e,"ERRO NÃO ESPERADO", 0);
                }
            } else if (emitirNF == 1){
                ocultar();
            }
            
        } else if (drogList.get(DrogComboBox.getSelectedIndex()).getSituacaodrogaria() == 0){
            JOptionPane.showMessageDialog(null, "Ative o cadastro da drogaria em sua tela de cadastro",
                    "DROGARIA DESATIVADA!", NORMAL);
        }
        
        
        
    }//GEN-LAST:event_botaoEmitirNfActionPerformed

    private void botaoCancelarNfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarNfActionPerformed
        // TODO add your handling code here:
        if (tabelaVenda.getSelectedRow() != -1 && !(model.getValueAt(tabelaVenda.getSelectedRow(), 5)).equals("Sem emissão")) {
            int cancelarNf = JOptionPane.showConfirmDialog(null, "Cancelar nota fiscal?", "CANCELAR NF", JOptionPane.YES_NO_OPTION);
            
            if (cancelarNf == 0) {
                NotaFiscalDAO nfdao = new NotaFiscalDAO();
                Venda nf = model.pegaDadosLinha(tabelaVenda.getSelectedRow());

                nfdao.cancelar(nf);

                model.recarregaTabela();
                tabelaVenda.clearSelection();
                clique = -1;
                ocultar();
            } else if (cancelarNf == 1){
                ocultar();
            }
        }
    }//GEN-LAST:event_botaoCancelarNfActionPerformed

    private void botaoVoltarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoVoltarMouseClicked
        // TODO add your handling code here:
        inicio.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_botaoVoltarMouseClicked

    private void botaoVoltarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoVoltarMouseEntered
        // TODO add your handling code here:
        this.setCursor(Cursor.HAND_CURSOR);
    }//GEN-LAST:event_botaoVoltarMouseEntered

    private void botaoVoltarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoVoltarMouseExited
        // TODO add your handling code here:
        this.setCursor(Cursor.DEFAULT_CURSOR);
    }//GEN-LAST:event_botaoVoltarMouseExited

    private void DrogComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DrogComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DrogComboBoxActionPerformed
    
    private String teste (String dataDigitada){
            String dataConvertida = null;
        try {
            SimpleDateFormat in = new SimpleDateFormat("dd/MM/yyyy");
            Date data = in.parse(dataDigitada);
            dataConvertida = String.valueOf(new java.sql.Date(data.getTime()));
        } catch (java.text.ParseException ex) {
            Logger.getLogger(JanelaDrogaria.class.getName()).log(Level.SEVERE, null, ex);
        }
        return dataConvertida;
    }
    
//    public void organizarCaixasInserir() throws ParseException{
//        //caixaInsDataVend.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory
//        (new javax.swing.text.MaskFormatter("##/##/####")));        
//    }
    
    public void formatar(){
        JTableHeader tituloTabela = tabelaVenda.getTableHeader();
        tituloTabela.setFont(new Font("century gothic", Font.BOLD, 12));
        
        DefaultTableCellRenderer centralizar = (DefaultTableCellRenderer)
        tituloTabela.getDefaultRenderer();
        centralizar.setHorizontalAlignment(JLabel.CENTER);
        centralizar.setVerticalAlignment(JLabel.CENTER);
        
        tabelaVenda.getColumnModel().getColumn(0).setMaxWidth(80);
        tabelaVenda.getColumnModel().getColumn(2).setMinWidth(160);
        tabelaVenda.getColumnModel().getColumn(2).setMaxWidth(160);
        
        UIManager.put("OptionPane.cancelButtonText", "Cancelar"); 
        UIManager.put("OptionPane.noButtonText", "Não"); 
        UIManager.put("OptionPane.yesButtonText", "Sim");
    }
    
    public void ocultar(){
        botaoEmitirNf.setVisible(false);
        botaoCancelarNf.setVisible(false);
        consultaItens.setVisible(false);
        botaoConsItens.setVisible(false);
        
        clique = -1;
    }
    
    public String converterData(String dataDigitada){
            String dataConvertida = null;
        try {
            SimpleDateFormat in = new SimpleDateFormat("dd/MM/yyyy");
            Date data = in.parse(dataDigitada);
            dataConvertida = String.valueOf(new java.sql.Date(data.getTime()));
        } catch (java.text.ParseException ex) {
            Logger.getLogger(JanelaDrogaria.class.getName()).log(Level.SEVERE, null, ex);
        }
        return dataConvertida;
    }
    
    public String desconverterData(String dataDigitada){
        String dataFormatada = null;
        
        SimpleDateFormat formatoBanco = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat formatoDesejado = new SimpleDateFormat("dd/MM/yyyy");
        
        try {
            Date dataBanco = new Date(formatoBanco.parse(dataDigitada).getTime());
            dataFormatada = formatoDesejado.format(dataBanco);
        } catch (ParseException e) {
        }
        return dataFormatada;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new JanelaVenda().setVisible(true);
                } catch (ParseException ex) {
                    Logger.getLogger(JanelaVenda.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    public void limpacampos(){
        caixaInsDataVend.setText("");
        
        caixaInsDataVend.requestFocus();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> DrogComboBox;
    private javax.swing.JButton botaoAlterarVend;
    private javax.swing.JButton botaoCadastrarVend;
    private javax.swing.JButton botaoCancelarNf;
    private javax.swing.JButton botaoConsItens;
    private javax.swing.JButton botaoEmitirNf;
    private javax.swing.JButton botaoLimpar;
    private javax.swing.JLabel botaoVoltar;
    private javax.swing.JButton botaorRemover;
    private javax.swing.JLabel caixaConsultaDrog;
    private javax.swing.JLabel caixaConsultaFormPag;
    private javax.swing.JLabel caixaConsultaNf;
    private javax.swing.JLabel caixaConsultaNomeDrog;
    private javax.swing.JLabel caixaDataVenda;
    private javax.swing.JLabel caixaFormPagVend;
    private javax.swing.JLabel caixaInsDataVend;
    private javax.swing.JTextField caixaInsPesquisar;
    private javax.swing.JLabel caixaPesquisar;
    private javax.swing.JLabel caixaVenda;
    private javax.swing.JLabel consultaCodDrog;
    private javax.swing.JLabel consultaFormPag;
    private javax.swing.JPanel consultaItens;
    private javax.swing.JLabel consultaNf;
    private javax.swing.JLabel consultaNomeDrog;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> pagComboBox;
    private javax.swing.JTable tabelaVenda;
    // End of variables declaration//GEN-END:variables
}
