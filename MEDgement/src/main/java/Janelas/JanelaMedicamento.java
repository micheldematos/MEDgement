/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Janelas;

import DAO.FornecedorDAO;
import DAO.MedicamentoDAO;
import Objetos.Medicamento;
import javax.swing.JOptionPane;
import Model.MedicamentoTableModel;
import Objetos.Fornecedor;
import java.awt.Cursor;
import java.awt.Font;
import java.net.URL;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;

/**
 *
 * @author michel.matos
 */
public final class JanelaMedicamento extends javax.swing.JFrame {
    
    TelaInicial inicio;
    
    MedicamentoTableModel model = new MedicamentoTableModel();
    
    FornecedorDAO fornDao = new FornecedorDAO();
    List<Fornecedor> fornList = fornDao.read();
    
    int clique = -1;

    /**
     * Creates new form JanelaMedicamento
     */
    public JanelaMedicamento() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        for (int i = 0; i < fornList.size(); i++) {
            if (fornList.get(i).getSituacaofornecedor() == 1) {
                fornComboBox.addItem(String.valueOf((fornList.get(i).getCodfornecedor())) + " - " + 
                    fornList.get(i).getNomefornecedor());
            } else if (fornList.get(i).getSituacaofornecedor() == 0){
                fornComboBox.addItem(String.valueOf("INATIVADO (" + (fornList.get(i).getCodfornecedor())) + " - " + 
                    fornList.get(i).getNomefornecedor() + ")");
            }   
        }
        
        tabelaMedicamento.setModel(model);
        consultaItens.setVisible(false);
        
        formatar();
    }
    
    public JanelaMedicamento(TelaInicial inicio) {
        initComponents();
        this.setLocationRelativeTo(null);
        
        for (int i = 0; i < fornList.size(); i++) {
            if (fornList.get(i).getSituacaofornecedor() == 1) {
                fornComboBox.addItem(String.valueOf((fornList.get(i).getCodfornecedor())) + " - " + 
                    fornList.get(i).getNomefornecedor());
            } else if (fornList.get(i).getSituacaofornecedor() == 0){
                fornComboBox.addItem(String.valueOf("INATIVADO (" + (fornList.get(i).getCodfornecedor())) + " - " + 
                    fornList.get(i).getNomefornecedor() + ")");
            }   
        }
        
        tabelaMedicamento.setModel(model);
        consultaItens.setVisible(false);
        
        formatar();
        this.inicio = inicio;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        caixaFornecedor = new javax.swing.JLabel();
        caixaNomeMedicamento = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaMedicamento = new javax.swing.JTable();
        caixaDescricaoMedicamento = new javax.swing.JLabel();
        botaoCadastrarMed = new javax.swing.JButton();
        botaoAlterarMed = new javax.swing.JButton();
        caixaValorVendMed = new javax.swing.JLabel();
        botaoInativarMed = new javax.swing.JButton();
        caixaInsNomMed = new javax.swing.JTextField();
        caixaInsDescMed = new javax.swing.JTextField();
        caixaInsValorVendMed = new javax.swing.JTextField();
        botaoLimpar1 = new javax.swing.JButton();
        caixaPesquisar = new javax.swing.JLabel();
        caixaInsPesquisar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        caixaForn = new javax.swing.JLabel();
        fornComboBox = new javax.swing.JComboBox<>();
        consultaItens = new javax.swing.JPanel();
        consultaMedicamento = new javax.swing.JLabel();
        caixaConsultaDesc = new javax.swing.JLabel();
        consultaDesc = new javax.swing.JLabel();
        caixaConsultaDataUltComp = new javax.swing.JLabel();
        consultaDataUltComp = new javax.swing.JLabel();
        caixaConsultaValorUltComp = new javax.swing.JLabel();
        consultaValorUltComp = new javax.swing.JLabel();
        caixaConsultaQuantidade = new javax.swing.JLabel();
        consultaQuantidade = new javax.swing.JLabel();
        caixaConsultaCodForn = new javax.swing.JLabel();
        consultaCodForn = new javax.swing.JLabel();
        caixaConsultaNomeForn = new javax.swing.JLabel();
        consultaNomeForn = new javax.swing.JLabel();
        caixaConsultaCod = new javax.swing.JLabel();
        consultaCod = new javax.swing.JLabel();
        botaoVoltar = new javax.swing.JLabel();

        jRadioButton1.setText("jRadioButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(900, 550));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        caixaFornecedor.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        caixaFornecedor.setText("MEDICAMENTO");

        caixaNomeMedicamento.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        caixaNomeMedicamento.setText("Nome");

        tabelaMedicamento.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tabelaMedicamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelaMedicamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMedicamentoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaMedicamento);

        caixaDescricaoMedicamento.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        caixaDescricaoMedicamento.setText("Descrição");

        botaoCadastrarMed.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        botaoCadastrarMed.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/Adicionar.png"))); // NOI18N
        botaoCadastrarMed.setMaximumSize(new java.awt.Dimension(35, 35));
        botaoCadastrarMed.setMinimumSize(new java.awt.Dimension(35, 35));
        botaoCadastrarMed.setPreferredSize(new java.awt.Dimension(35, 35));
        botaoCadastrarMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCadastrarMedActionPerformed(evt);
            }
        });

        botaoAlterarMed.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        botaoAlterarMed.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/Alterar.png"))); // NOI18N
        botaoAlterarMed.setMaximumSize(new java.awt.Dimension(35, 35));
        botaoAlterarMed.setMinimumSize(new java.awt.Dimension(35, 35));
        botaoAlterarMed.setPreferredSize(new java.awt.Dimension(35, 35));
        botaoAlterarMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAlterarMedActionPerformed(evt);
            }
        });

        caixaValorVendMed.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        caixaValorVendMed.setText("Valor da venda");

        botaoInativarMed.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        botaoInativarMed.setText("Inativar");
        botaoInativarMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoInativarMedActionPerformed(evt);
            }
        });

        caixaInsNomMed.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        caixaInsDescMed.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        caixaInsValorVendMed.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        botaoLimpar1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        botaoLimpar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/Limpar.png"))); // NOI18N
        botaoLimpar1.setMaximumSize(new java.awt.Dimension(35, 35));
        botaoLimpar1.setMinimumSize(new java.awt.Dimension(35, 35));
        botaoLimpar1.setPreferredSize(new java.awt.Dimension(35, 35));
        botaoLimpar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLimpar1ActionPerformed(evt);
            }
        });

        caixaPesquisar.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        caixaPesquisar.setText("Pesquisar");

        caixaInsPesquisar.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        caixaInsPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                caixaInsPesquisarKeyReleased(evt);
            }
        });

        caixaForn.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        caixaForn.setText("Fornecedor");

        fornComboBox.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        consultaItens.setBackground(new java.awt.Color(255, 255, 255));
        consultaItens.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 46, 138), 4, true));
        consultaItens.setMaximumSize(new java.awt.Dimension(265, 235));
        consultaItens.setMinimumSize(new java.awt.Dimension(265, 235));
        consultaItens.setName(""); // NOI18N

        consultaMedicamento.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        consultaMedicamento.setText("CONSULTA MEDICAMENTO");

        caixaConsultaDesc.setBackground(new java.awt.Color(0, 0, 0));
        caixaConsultaDesc.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        caixaConsultaDesc.setText("Descrição");

        consultaDesc.setBackground(new java.awt.Color(0, 0, 0));
        consultaDesc.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        consultaDesc.setText("Descrição");

        caixaConsultaDataUltComp.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        caixaConsultaDataUltComp.setText("Data ultima compra");

        consultaDataUltComp.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        consultaDataUltComp.setText("Data ultima compra");

        caixaConsultaValorUltComp.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        caixaConsultaValorUltComp.setText("Valor ultima compra");

        consultaValorUltComp.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        consultaValorUltComp.setText("Valor");

        caixaConsultaQuantidade.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        caixaConsultaQuantidade.setText("Quantidade");

        consultaQuantidade.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        consultaQuantidade.setText("Quantidade");

        caixaConsultaCodForn.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        caixaConsultaCodForn.setText("Código fornecedor");

        consultaCodForn.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        consultaCodForn.setText("Código fornecedor");

        caixaConsultaNomeForn.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        caixaConsultaNomeForn.setText("Nome fornecedor");

        consultaNomeForn.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        consultaNomeForn.setText("Nome fornecedor");

        caixaConsultaCod.setBackground(new java.awt.Color(0, 0, 0));
        caixaConsultaCod.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        caixaConsultaCod.setText("Código");

        consultaCod.setBackground(new java.awt.Color(0, 0, 0));
        consultaCod.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        consultaCod.setText("Código");

        javax.swing.GroupLayout consultaItensLayout = new javax.swing.GroupLayout(consultaItens);
        consultaItens.setLayout(consultaItensLayout);
        consultaItensLayout.setHorizontalGroup(
            consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultaItensLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(consultaMedicamento)
                    .addGroup(consultaItensLayout.createSequentialGroup()
                        .addGroup(consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(caixaConsultaDesc)
                            .addComponent(caixaConsultaCod)
                            .addComponent(caixaConsultaDataUltComp)
                            .addComponent(caixaConsultaValorUltComp)
                            .addComponent(caixaConsultaQuantidade)
                            .addComponent(caixaConsultaCodForn)
                            .addComponent(caixaConsultaNomeForn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(consultaNomeForn)
                            .addComponent(consultaQuantidade)
                            .addComponent(consultaValorUltComp)
                            .addComponent(consultaDataUltComp)
                            .addComponent(consultaDesc)
                            .addComponent(consultaCod)
                            .addComponent(consultaCodForn))))
                .addContainerGap())
        );
        consultaItensLayout.setVerticalGroup(
            consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultaItensLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(consultaMedicamento, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(caixaConsultaCod)
                    .addComponent(consultaCod))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(caixaConsultaDesc)
                    .addComponent(consultaDesc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(caixaConsultaDataUltComp)
                    .addComponent(consultaDataUltComp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(consultaValorUltComp)
                    .addComponent(caixaConsultaValorUltComp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(caixaConsultaQuantidade)
                    .addComponent(consultaQuantidade))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(caixaConsultaCodForn)
                    .addComponent(consultaCodForn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(consultaItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(caixaConsultaNomeForn)
                    .addComponent(consultaNomeForn))
                .addGap(19, 19, 19))
        );

        botaoVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/Voltar.png"))); // NOI18N
        botaoVoltar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botaoVoltarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botaoVoltarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botaoVoltarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(caixaValorVendMed)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(caixaInsValorVendMed, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(caixaDescricaoMedicamento)
                                .addGap(45, 45, 45)
                                .addComponent(caixaInsDescMed, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(botaoCadastrarMed, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(botaoAlterarMed, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(botaoLimpar1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(botaoInativarMed, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(caixaNomeMedicamento)
                                .addGap(70, 70, 70)
                                .addComponent(caixaInsNomMed, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(botaoVoltar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(caixaFornecedor))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(caixaForn)
                                .addGap(37, 37, 37)
                                .addComponent(fornComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(consultaItens, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(caixaPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(caixaInsPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 775, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel3)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(caixaFornecedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoVoltar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(caixaInsNomMed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(caixaNomeMedicamento))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(caixaInsDescMed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(caixaDescricaoMedicamento))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(caixaInsValorVendMed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(caixaValorVendMed))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fornComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(caixaForn))
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(botaoCadastrarMed, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(botaoAlterarMed, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(botaoLimpar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(botaoInativarMed, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(consultaItens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(caixaInsPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(caixaPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoCadastrarMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCadastrarMedActionPerformed
        // TODO add your handling code here:
        Medicamento med = new Medicamento();
        MedicamentoDAO dao = new MedicamentoDAO();
        
        try {
            med.setNomemedicamento(caixaInsNomMed.getText());
            med.setDescricaomedicamento(caixaInsDescMed.getText());
            med.setDataultimacompra(null);
            med.setValorcusto(0.0);
            med.setValorvenda(Double.parseDouble(caixaInsValorVendMed.getText()));
            med.setQuantidadeestoque(0);
            med.setCodfornecedor(fornList.get(fornComboBox.getSelectedIndex()).getCodfornecedor());
            dao.criar(med);
            model.recarregaTabela();
            limpacampos();
            ocultar();
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Falha no cadastro de medicamento: " + e);
        }
    }//GEN-LAST:event_botaoCadastrarMedActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        model.recarregaTabela();
    }//GEN-LAST:event_formWindowActivated

    private void botaoAlterarMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAlterarMedActionPerformed
        // TODO add your handling code here:
        if (tabelaMedicamento.getSelectedRow() != -1) {
            int alterarMed = JOptionPane.showConfirmDialog(null, "Alterar medicamento?", "CONFIRMAR", JOptionPane.YES_NO_OPTION);
            
            if (alterarMed == 0) {
                model.setValueAt(caixaInsNomMed.getText(), tabelaMedicamento.getSelectedRow(), 1);
                model.setValueAt(caixaInsDescMed.getText(), tabelaMedicamento.getSelectedRow(), 2);
                model.setValueAt(String.valueOf(caixaInsValorVendMed.getText()), tabelaMedicamento.getSelectedRow(), 5);
                model.setValueAt(String.valueOf(fornList.get(fornComboBox.getSelectedIndex()).getCodfornecedor()), tabelaMedicamento.getSelectedRow(), 8);

                Medicamento med = model.pegaDadosLinha(tabelaMedicamento.getSelectedRow());
                MedicamentoDAO dao = new MedicamentoDAO();

                dao.atualizar(med);
                limpacampos();
                ocultar();
                model.recarregaTabela();
            } else if (alterarMed == 1){
                ocultar();
            }            
        }
    }//GEN-LAST:event_botaoAlterarMedActionPerformed

    private void tabelaMedicamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMedicamentoMouseClicked
        // TODO add your handling code here:
        if (tabelaMedicamento.getSelectedRow() != -1 && tabelaMedicamento.getSelectedRow() != clique) {
            clique = tabelaMedicamento.getSelectedRow();
            Medicamento med = model.pegaDadosLinha(tabelaMedicamento.getSelectedRow());

            botaoInativarMed.setVisible(true);

            caixaInsNomMed.setText(med.getNomemedicamento());
            caixaInsDescMed.setText(med.getDescricaomedicamento());
            caixaInsValorVendMed.setText("" + med.getValorvenda());

            for (int i = 0; i < fornList.size(); i++) {
                if ((fornList.get(i).getCodfornecedor()) == med.getCodfornecedor()) {
                    fornComboBox.setSelectedIndex(i);
                }
            }

            URL ativar = getClass().getResource("/Logo/Ativar.png");
            Icon activate = new ImageIcon(ativar);
            URL desativar = getClass().getResource("/Logo/Inativar.png");
            Icon desactivate = new ImageIcon(desativar);

            if (med.getSituacaomed() == 0) {
                botaoInativarMed.setIcon(activate);
                botaoInativarMed.setText("Ativar");
            } else {
                botaoInativarMed.setIcon(desactivate);
                botaoInativarMed.setText("Inativar");
            }

            consultaMedicamento(med.getCodmedicamento(), med.getDescricaomedicamento(), 
                    med.getDataultimacompra(), med.getValorcusto(), 
                    med.getQuantidadeestoque(), med.getCodfornecedor());
        } else {
            ocultar();
        }
    }//GEN-LAST:event_tabelaMedicamentoMouseClicked

    public void consultaMedicamento(int cod ,String desc, String dataUltComp, double valorUltComp, int qntd, 
            int codForn){
            
            FornecedorDAO fornDao = new FornecedorDAO();
        
            consultaItens.setVisible(true);
            
            consultaDesc.setText(desc);
            consultaQuantidade.setText(String.valueOf(qntd));
            consultaCodForn.setText(String.valueOf(codForn));
            consultaNomeForn.setText(fornDao.pesquisarCod(String.valueOf(codForn)).get(0).getNomefornecedor());
            consultaCod.setText(String.valueOf(cod));
            
            if (dataUltComp == null) {
                consultaDataUltComp.setText("Sem compra");
            } else {
                               
                String dataFormatada = null;
                String dataDigitada = dataUltComp;
        
                SimpleDateFormat formatoBanco = new SimpleDateFormat("yyyy-MM-dd");
                SimpleDateFormat formatoDesejado = new SimpleDateFormat("dd/MM/yyyy");

                try {
                    Date dataBanco = new Date(formatoBanco.parse(dataDigitada).getTime());
                    dataFormatada = formatoDesejado.format(dataBanco);
                } catch (ParseException e) {
                }
                
                consultaDataUltComp.setText(dataFormatada);
            }
            
            if (valorUltComp == 0.0) {
                consultaValorUltComp.setText("Sem compra");
            } else {
                consultaValorUltComp.setText(String.valueOf(valorUltComp));
            }
    }
    
    private void botaoInativarMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoInativarMedActionPerformed
        // TODO add your handling code here:
        Medicamento med = model.pegaDadosLinha(tabelaMedicamento.getSelectedRow());
        
        if ("Inativar".equals(botaoInativarMed.getText())) {
            int inativarMed = JOptionPane.showConfirmDialog(null, "Inativar medicamento?","CONFIRMAR",JOptionPane.YES_NO_OPTION);
            if (inativarMed == 0) {
                MedicamentoDAO dao = new MedicamentoDAO();
                dao.inativar(med);
                limpacampos();
                ocultar(); 
            } else if(inativarMed == 1){
                ocultar();
            }            
        } else {
            int ativarMed = JOptionPane.showConfirmDialog(null, "Ativar medicamento?", "CONFIRMAR", JOptionPane.YES_NO_OPTION);
            
            if(ativarMed == 0){
                MedicamentoDAO dao = new MedicamentoDAO();
                dao.ativar(med);
                limpacampos();
                ocultar();
            } else if(ativarMed == 1){
                MedicamentoDAO dao = new MedicamentoDAO();
                dao.ativar(med);
                limpacampos();
                ocultar();
            }            
        }
    }//GEN-LAST:event_botaoInativarMedActionPerformed

    private void botaoLimpar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLimpar1ActionPerformed
        // TODO add your handling code here:
        int limparCampos = JOptionPane.showConfirmDialog(null, "Limpar campos?", "CONFIRMAR", JOptionPane.YES_NO_OPTION);
        if (limparCampos == 0) {
            limpacampos();
            ocultar();
        } else if (limparCampos == 1){
            ocultar();
        }
        
    }//GEN-LAST:event_botaoLimpar1ActionPerformed

    private void caixaInsPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_caixaInsPesquisarKeyReleased
        // TODO add your handling code here:
        if (!"".equals(caixaInsPesquisar.getText())) {
            model.recarregaTabelaPesq(caixaInsPesquisar.getText());
        } else {
            model.recarregaTabela();
        }
    }//GEN-LAST:event_caixaInsPesquisarKeyReleased

    public void ocultar(){
        clique = -1;
        tabelaMedicamento.clearSelection();
        botaoInativarMed.setVisible(false);
        consultaItens.setVisible(false);
    }
    
    private void botaoVoltarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoVoltarMouseClicked
        // TODO add your handling code here:
        inicio.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_botaoVoltarMouseClicked

    private void botaoVoltarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoVoltarMouseEntered
        // TODO add your handling code here:
        this.setCursor(Cursor.HAND_CURSOR);
    }//GEN-LAST:event_botaoVoltarMouseEntered

    private void botaoVoltarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoVoltarMouseExited
        // TODO add your handling code here:
        this.setCursor(Cursor.DEFAULT_CURSOR);
    }//GEN-LAST:event_botaoVoltarMouseExited
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaMedicamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaMedicamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaMedicamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaMedicamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JanelaMedicamento().setVisible(true);
            }
        });
    }
    
    public void formatar(){
        JTableHeader tabelaTitulo = tabelaMedicamento.getTableHeader();
        tabelaTitulo.setFont(new Font("century gothic", Font.BOLD, 12));
        
        DefaultTableCellRenderer centralizar = (DefaultTableCellRenderer)
                tabelaTitulo.getDefaultRenderer();
        centralizar.setHorizontalAlignment(JLabel.CENTER);
        centralizar.setVerticalAlignment(JLabel.CENTER);
        
        botaoInativarMed.setVisible(false);
        
        UIManager.put("OptionPane.cancelButtonText", "Cancelar"); 
        UIManager.put("OptionPane.noButtonText", "Não"); 
        UIManager.put("OptionPane.yesButtonText", "Sim");
    }
    
    public void limpacampos(){
        caixaInsNomMed.setText("");
        caixaInsDescMed.setText("");
        caixaInsValorVendMed.setText("");
        
        caixaInsNomMed.requestFocus();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoAlterarMed;
    private javax.swing.JButton botaoCadastrarMed;
    private javax.swing.JButton botaoInativarMed;
    private javax.swing.JButton botaoLimpar1;
    private javax.swing.JLabel botaoVoltar;
    private javax.swing.JLabel caixaConsultaCod;
    private javax.swing.JLabel caixaConsultaCodForn;
    private javax.swing.JLabel caixaConsultaDataUltComp;
    private javax.swing.JLabel caixaConsultaDesc;
    private javax.swing.JLabel caixaConsultaNomeForn;
    private javax.swing.JLabel caixaConsultaQuantidade;
    private javax.swing.JLabel caixaConsultaValorUltComp;
    private javax.swing.JLabel caixaDescricaoMedicamento;
    private javax.swing.JLabel caixaForn;
    private javax.swing.JLabel caixaFornecedor;
    private javax.swing.JTextField caixaInsDescMed;
    private javax.swing.JTextField caixaInsNomMed;
    private javax.swing.JTextField caixaInsPesquisar;
    private javax.swing.JTextField caixaInsValorVendMed;
    private javax.swing.JLabel caixaNomeMedicamento;
    private javax.swing.JLabel caixaPesquisar;
    private javax.swing.JLabel caixaValorVendMed;
    private javax.swing.JLabel consultaCod;
    private javax.swing.JLabel consultaCodForn;
    private javax.swing.JLabel consultaDataUltComp;
    private javax.swing.JLabel consultaDesc;
    private javax.swing.JPanel consultaItens;
    private javax.swing.JLabel consultaMedicamento;
    private javax.swing.JLabel consultaNomeForn;
    private javax.swing.JLabel consultaQuantidade;
    private javax.swing.JLabel consultaValorUltComp;
    private javax.swing.JComboBox<String> fornComboBox;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaMedicamento;
    // End of variables declaration//GEN-END:variables
}
